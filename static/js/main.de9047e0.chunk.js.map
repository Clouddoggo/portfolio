{"version":3,"sources":["components/Header.js","components/About.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","class","href","Component","About","Projects","Container","Row","Card","target","Footer","alt","className","App","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0SA2BeA,E,uKAvBP,OACI,4BAAQC,GAAG,QACP,wBAAIC,MAAM,8BACN,wBAAIA,MAAM,YACN,uBAAGA,MAAM,2BAA2BC,KAAK,SAAzC,SAEJ,wBAAID,MAAM,YACN,uBAAGA,MAAM,2BAA2BC,KAAK,UAAzC,UAEJ,wBAAID,MAAM,YACN,uBAAGA,MAAM,2BAA2BC,KAAK,aAAzC,cAGR,yBAAKD,MAAM,aACP,yBAAKA,MAAM,eACP,wBAAIA,MAAM,cAAV,wB,GAjBHE,aCiBNC,E,uKAdP,OACI,yBAAKJ,GAAG,QAAQC,MAAM,SAElB,yBAAKA,MAAM,cACP,wCACA,sDACA,+D,GARAE,a,uBC6ELE,E,uKAtEP,OACI,6BAASL,GAAG,YACR,kBAACM,EAAA,EAAD,CAAWN,GAAG,oDACV,kBAACO,EAAA,EAAD,KACI,yBAAKN,MAAM,4CACP,kBAACO,EAAA,EAAD,KACI,yBAAKP,MAAM,aACP,wBAAIA,MAAM,cAAV,YACA,uBAAGA,MAAM,aAAT,iCAGA,uBAAGC,KAAK,KAAKD,MAAM,mBAAnB,cACA,uBAAGC,KAAK,yCAAyCO,OAAO,SAASR,MAAM,mBAAvE,iBAGR,kBAACO,EAAA,EAAD,KACI,yBAAKP,MAAM,aACP,wBAAIA,MAAM,cAAV,QACA,uBAAGA,MAAM,aAAT,sDAEA,4BACQ,iGACA,+FACA,6FAGR,uBAAGC,KAAK,KAAKD,MAAM,mBAAnB,cACA,uBAAGC,KAAK,qCAAqCO,OAAO,SAASR,MAAM,mBAAnE,mBAKhB,kBAACM,EAAA,EAAD,KACI,yBAAKN,MAAM,4CACP,kBAACO,EAAA,EAAD,KACI,yBAAKP,MAAM,aACP,wBAAIA,MAAM,cAAV,aACA,uBAAGA,MAAM,aAAT,6FAGI,4BACI,4BAAI,uCAAJ,QAA2B,sCAA3B,mBACA,2EACA,gEANR,qHAUA,uBAAGC,KAAK,KAAKD,MAAM,mBAAnB,cACA,uBAAGC,KAAK,qCAAqCO,OAAO,SAASR,MAAM,mBAAnE,iBAGR,kBAACO,EAAA,EAAD,KACI,yBAAKP,MAAM,aACP,wBAAIA,MAAM,cAAV,gBACA,uBAAGA,MAAM,aAAT,kGAIA,uBAAGC,KAAK,KAAKD,MAAM,mBAAnB,cACA,uBAAGC,KAAK,0CAA0CO,OAAO,SAASR,MAAM,mBAAxE,yB,GAhEbE,aCkBRO,E,uKAnBP,OACI,gCACI,4BACI,4BACI,uBAAGR,KAAK,gCAAgCS,IAAI,wBAA5C,SACU,uBAAGC,UAAU,mBAG3B,4BACI,uBAAGV,KAAK,2BAA2BS,IAAI,YAAvC,QACS,uBAAGC,UAAU,2B,GAZzBT,a,yBCmBNU,E,uKAXX,OACE,yBAAKD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUE,KAAMA,MAChB,kBAAC,EAAD,W,GAPUX,aCIEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.de9047e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header id=\"home\">\r\n                <ul class=\"nav justify-content-center\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link lead text-white\" href=\"#home\">HOME</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link lead text-white\" href=\"#about\">ABOUT</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link lead text-white\" href=\"#projects\">PROJECTS</a>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"container\">\r\n                    <div class=\"page-header\">\r\n                        <h1 class=\"text-white\">Hi! I am Jel.</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"about\" class=\"media\">\r\n                {/* <Image class=\"d-flex align-self-center mr-3\" src={require(\"../images/mountain.jpg\")} roundedCircle alt=\"A photo of me\" fluid /> */}\r\n                <div class=\"media-body\">\r\n                    <h3>About me</h3>\r\n                    <p>I am like reading books</p>\r\n                    <p>test text (still about me)</p>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        // To switch to data file\r\n        // let data = this.props.data;\r\n\r\n        return (\r\n            <section id=\"projects\">\r\n                <Container id=\"projects-container d-flex justify-content-center\">\r\n                    <Row>\r\n                        <div class=\"card-group align-items-stretch col-lg-12\">\r\n                            <Card>\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">Todo App</h4>\r\n                                    <p class=\"card-text\">\r\n                                        Heroku deployment in progress\r\n                                    </p>\r\n                                    <a href=\"#!\" class=\"btn btn-primary\">Learn more</a>\r\n                                    <a href=\"https://github.com/Clouddoggo/todo-app\" target=\"_blank\" class=\"btn btn-primary\">Source code</a>\r\n                                </div>\r\n                            </Card>\r\n                            <Card>\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">Duke</h4>\r\n                                    <p class=\"card-text\">\r\n                                        Individual project for CS2103T Software Engineering\r\n                                    <ul>\r\n                                            <li>Worked on basic commands such as add, delete, find and list tasks</li>\r\n                                            <li>Added help command for users to view list of commands available</li>\r\n                                            <li>Wrote a comprehensive User Guide for new and existing users</li>\r\n                                        </ul>\r\n                                    </p>\r\n                                    <a href=\"#!\" class=\"btn btn-primary\">Learn more</a>\r\n                                    <a href=\"https://github.com/Clouddoggo/duke\" target=\"_blank\" class=\"btn btn-primary\">Source code</a>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div class=\"card-group align-items-stretch col-lg-12\">\r\n                            <Card>\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">JelphaBot</h4>\r\n                                    <p class=\"card-text\">\r\n                                        Team project for CS2103T Software Engineering.\r\n                                        Worked on the productivity aspect for users\r\n                                        <ul>\r\n                                            <li><code>start</code> and <code>stop</code> timer commands</li>\r\n                                            <li>Switch tab command: productivity, :p and :P</li>\r\n                                            <li>Rendering of productivity panel</li>\r\n                                        </ul>\r\n                                        Also worked on morphing the existing address book into a task manager by adding the DateTime class and test cases\r\n    </p>\r\n                                    <a href=\"#!\" class=\"btn btn-primary\">Learn more</a>\r\n                                    <a href=\"https://github.com/Clouddoggo/main\" target=\"_blank\" class=\"btn btn-primary\">Source code</a>\r\n                                </div>\r\n                            </Card>\r\n                            <Card>\r\n                                <div class=\"card-body\">\r\n                                    <h4 class=\"card-title\">This Website</h4>\r\n                                    <p class=\"card-text\">\r\n                                        Some quick example text to build on the card title\r\n                                        and make up the bulk of the card's content.\r\n    </p>\r\n                                    <a href=\"#!\" class=\"btn btn-primary\">Learn more</a>\r\n                                    <a href=\"https://github.com/Clouddoggo/portfolio\" target=\"_blank\" class=\"btn btn-primary\">Source code</a>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://github.com/Clouddoggo\" alt=\"go to GitHub profile\">\r\n                            Github<i className=\"fa fa-github\"></i>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"mailto:jel.lim@u.nus.edu\" alt=\"email me\">\r\n                            Email<i className=\"fa fa-envelope\"></i>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Footer from \"./components/Footer\";\nimport './App.css';\nimport data from './data';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n        <Header></Header>\n        <About></About>\n        <Projects data={data}></Projects>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}